name: 'Build nf-tower schemas'
author: 'Dries Schaumont'
description: >
  This action will build nextflow schemas for all 
  Viash workflows and components in a repository
inputs:
  input_dir: 
    required: true
    description: 'Location of the viash configurations.'
  token:
    description: >
        Personal access token (PAT) used to fetch the viash tools repository.
    required: true
    default: ${{ github.token }}
  tools_version:
    description: >
      Release of Viash tools to use.
    required: false
    default: 'latest'
  output_directory:
    description: >
      Location of the output files. By default, will save the build schemas 
      next to the Viash config. If set, will create a 'nextflow' folder inside 
      the output directory if it does not exist. The schema for a component 
      will be stored in a folder with the name of that component, 
      located in the nextflow directory. This follows the output schema from 
      the 'viash ns build' command.
    required: false
runs:
  using: 'composite'
  steps:
    - name: Get latest release
      shell: bash
      id: latestrelease
      run: |
        if [ "${{ inputs.tools_version }}" == "latest" ]; then
          RELEASE_TAG=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ inputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/viash-io/viash_tools/releases/latest | jq -r '.tag_name')
        else
          RELEASE_TAG="${{ inputs.tools_version }}"
        fi
        echo "Using version $RELEASE_TAG"
        echo "releasetag=$RELEASE_TAG" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v3
      with: 
        repository: viash-io/viash_tools
        token: ${{ inputs.token }}
        path: viash_tools
        ref: ${{ steps.latestrelease.outputs.releasetag }}

    - uses: viash-io/viash-actions/ns-list@improve_ns_list
      id: nslist
      with:
        src: ${{ inputs.input_dir }}
        format: "json"

    - name: 'Generate schemas'
      shell: bash
      id: generate-schemas
      run: |
        if ! command -v viash &> /dev/null
        then
          echo "Viash could not be found.";
          exit 127;
        fi
        [ -z "${{ steps.nslist.components_json }}" ] || { echo >&2 "No workflow Viash config files found."; exit 1; }
        inputs=$(jq -r '[.[] | .info.config] | join(";")' <<< "${{ steps.nslist.components_json }}")
        [ -z "$inputs" ] && { echo >&2 "No workflow Viash config files found."; exit 1; }
        if [ ! -z "${{inputs.output_directory}}" ]; then
          # Default behavior
          jq_query='[.[] | "'"${{inputs.output_directory}}"'/nextflow/" + .functionality.namespace + "/" + .functionality.name + "/nextflow_schema.json"] | join(";")'
        else
          jq_query='[.[] | .info.config | capture("^(?<dir>.*\/)").dir + "/nextflow_params.yaml"] | join(";")'
        fi
        echo "jq query: $jq_query"
        outputs_schema=$(jq -r "$jq_query" ${{ runner.temp }}/ns_list_src.json)
        echo "Running viash_tools/target/docker/nextflow/generate_schema/generate_schema --input $inputs --output $outputs_schema"
        viash_tools/target/docker/nextflow/generate_schema/generate_schema --input "$inputs" --output "$outputs_schema"
        echo "Created $outputs_schema"
      