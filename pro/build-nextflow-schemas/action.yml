name: 'Build nf-tower schemas for Viash components'
author: Data Intuitive
description: >
  This action will build nextflow schemas for Viash workflows and components in a repository.
inputs:
  target_dir:
    required: false
    description: 'The target directory. If not specified, the `target` path specified in the Viash project config (`_viash.yaml`) will be used. If that is not specified, the default `target/nextflow` will be used.'
  viash_pro_token:
    description: Viash Pro token.
    required: true
  tools_version:
    description: >
      Release of Viash tools to use.
    required: false
    default: 'latest'
  enable_dataset_input:
    description: 'enable nf-tower dataset input'
    required: false
    default: "false"
runs:
  using: 'composite'
  steps:
    - name: Get latest release
      shell: bash
      id: latestrelease
      run: |
        if [ "${{ inputs.tools_version }}" == "latest" ]; then
          RELEASE_TAG=$(curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ inputs.token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/viash-io/viash_tools/releases/latest | jq -r '.tag_name')
        else
          RELEASE_TAG="${{ inputs.tools_version }}"
        fi
        echo "Using version $RELEASE_TAG"
        echo "releasetag=$RELEASE_TAG" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v4
      with: 
        repository: viash-io/viash_tools
        token: ${{ inputs.viash_pro_token }}
        path: viash_tools
        ref: ${{ steps.latestrelease.outputs.releasetag }}

    - name: Determine target directory
      shell: bash
      id: defaults
      run: |
        TARGET_DIR=${{ inputs.target_dir }}

        if [ -z "$TARGET_DIR" ]; then
          TARGET_DIR=$(yq -r '.target // "target/nextflow"' _viash.yaml)
        fi

        echo "target_dir=$TARGET_DIR" >> $GITHUB_OUTPUT

    - name: 'Generate schemas'
      shell: bash
      id: generate-schemas
      run: |
        command -v viash >/dev/null 2>&1 || { echo >&2 "Viash could not be found."; exit 127; }

        TARGET_DIR="${{ steps.defaults.outputs.target_dir }}"

        readarray -d '' BUILT_CONFIGS < <(find "$TARGET_DIR" -name .config.vsh.yaml -print0)
        echo "Detected configs:"
        printf "%s\n" "${BUILT_CONFIGS[@]}"
        echo

        NEXTFLOW_SCHEMAS=()
        for config_path in "${BUILT_CONFIGS[@]}"; do
          dir=$(basename "$config_path")
          NEXTFLOW_SCHEMAS+=("$dir/nextflow_schema.json) 
        done

        NEXTFLOW_SCHEMAS=$(echo "$BUILT_CONFIGS" | sed 's/.config.vsh.yaml/nextflow_schema.json/g')
        echo "Building Nextflow schema files:"
        printf "%s\n" "${NEXTFLOW_SCHEMAS[@]}"
        echo

        VIASH_VERSION=`viash -v | grep -oP 'viash \K[0-9.]+'`
        IFS=. read -r major minor patch <<< $VIASH_VERSION
        IFS=";" 
        if (( "$major" > 0 )) || (( "$minor" >= 9 )); then
          viash_tools/target/docker/nextflow/generate_schema_v9/generate_schema_v9 \
          --input "${BUILT_CONFIGS[*]}" \
          --output  "${NEXTFLOW_SCHEMAS[*]}" \
          $([[ "${{ inputs.enable_dataset_input }}" == "true" ]] && echo "--enable_dataset_input") 
        else
          viash_tools/target/docker/nextflow/generate_schema/generate_schema \
          --input "${BUILT_CONFIGS[*]}" \
          --output "${NEXTFLOW_SCHEMAS[*]}" \
          $([[ "${{ inputs.enable_dataset_input }}" == "true" ]] && echo "--enable_dataset_input")
        fi

